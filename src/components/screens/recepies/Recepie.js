import RecepiesList from './RecipesData';
import jsPDF from "jspdf";
import { useParams } from 'react-router-dom';
import React from 'react';
export default function Recepie() {
  const { id } = useParams();
  const recipe = RecepiesList.find(cake => cake.id === Number(id));
  
  function downloadPDF() {
    const doc = new jsPDF();

    // Set title
    doc.setFont("Helvetica", "bold");
    doc.setFontSize(20);
    doc.setTextColor(40, 40, 40);
    doc.text(recipe.name, 10, 20); // Recipe title

    // Add a line separator
    doc.setDrawColor(200, 200, 200);
    doc.line(10, 25, 200, 25);

    // Add content
    doc.setFont("Helvetica", "normal");
    doc.setFontSize(12);
    doc.setTextColor(60, 60, 60);

    // Split the recipe content into lines to fit the page width
    const content = doc.splitTextToSize(recipe.theRecepie, 180); // 180 is the width of the text area
    doc.text(content, 10, 35); // Start writing content below the title

    // Footer
    doc.setFontSize(10);
    doc.setTextColor(150, 150, 150);
    doc.text("Generated by CakesProject", 10, 290); // Footer text at the bottom of the page

    // Save the PDF
    doc.save(`${recipe.name}.pdf`);
  }

  if (!recipe) {
    return (
      <p
        style={{
          textAlign: 'center',
          fontFamily: "'Varela Round', sans-serif",
        }}
      >
        Recipe not found
      </p>
    );
  }

  return (
    <div
      style={{
        maxWidth: '800px',
        margin: '40px auto',
        padding: '30px',
        backgroundColor: '#fff4f1',
        borderRadius: '16px',
        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
        fontFamily: "'Varela Round', sans-serif",
        color: '#5b3a2f',
      }}
    >
      <h1 style={{ textAlign: 'center', marginBottom: '25px', fontSize: '2rem' }}>
        {recipe.name}
      </h1>

      <img
  src={recipe.image}
  alt={recipe.name}
  style={{
    width: '100%',
    maxWidth: '500px',        // מגביל את הרוחב בפועל
    height: 'auto',
    display: 'block',
    margin: '0 auto 25px',    // מרכז את התמונה ומוסיף רווח תחתון
    objectFit: 'cover',
    borderRadius: '12px',
    border: '3px solid #ffd1c1',
  }}
/>

      <pre
        style={{
          backgroundColor: '#ffeae2',
          padding: '25px',
          borderRadius: '12px',
          fontSize: '1.05rem',
          whiteSpace: 'pre-wrap',
          lineHeight: '1.8',
          border: '1px solid #f5b8a6',
          fontFamily: "'Varela Round', sans-serif", // הוספת הגופן כאן
        }}
      >
        {recipe.theRecepie}
      </pre>
      <button
  onClick={downloadPDF}
  style={{
    backgroundColor: '#ff6f61', // צבע רקע
    color: '#fff', // צבע טקסט
    border: 'none', // ללא גבול
    borderRadius: '8px', // פינות מעוגלות
    padding: '10px 20px', // ריווח פנימי
    fontSize: '1rem', // גודל טקסט
    fontFamily: "'Varela Round', sans-serif", // גופן תואם
    cursor: 'pointer', // סמן עכבר מותאם
    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', // צל
    transition: 'background-color 0.3s ease', // אפקט מעבר
  }}
  onMouseOver={(e) => (e.target.style.backgroundColor = '#e65a50')} // צבע רקע בריחוף
  onMouseOut={(e) => (e.target.style.backgroundColor = '#ff6f61')} // חזרה לצבע המקורי
>
  Download PDF
  </button>
<div
  style={{
    textAlign: 'center',
    marginTop: '20px',
    fontSize: '1.2rem',
    color: '#5b3a2f',
  }}
></div>
    </div>
  
  );
}